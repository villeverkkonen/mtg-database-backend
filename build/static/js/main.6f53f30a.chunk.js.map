{"version":3,"sources":["services/cards.js","services/decks.js","components/Card.js","components/CardList.js","components/NavBar.js","components/DraftCardList.js","components/DraftDeck.js","components/SavedDeck.js","components/SavedDecksList.js","components/Loading.js","App.js","index.js"],"names":["baseUrl","services_cards","getAll","axios","get","then","response","data","getColor","color","getById","id","getDraftBooster","set","getSets","decks","deckId","create","newDeck","deckName","post","Card","_ref","card","backToCardList","react_default","a","createElement","className","onClick","src","imageUrl","alt","name","setName","rarity","text","CardList","cards","showCardForMobile","showImageOrCard","mouseOver","mouseOut","showLinkForId","map","index","key","onMouseOver","onMouseOut","style","NavBar","getCardsWithColor","playDraft","showDraftDeck","sets","draftDeck","savedDecksAmount","showSavedDecks","onChange","defaultValue","hidden","value","code","length","DraftCardList","boosters","addCardToDeck","boosterIndex","showDraftingInfo","toggleDraftingInfo","DraftDeck","cardsLeft","getBackToDrafting","saveDeck","deckIsSaved","toggleShowSaveDeckForm","showSavedDeckForm","changeSavedDeckName","savedDeckName","showDeckHasBeenSavedText","sort","b","colorsA","colors","i","cmc","colorsB","placeholder","type","autoFocus","SavedDeck","savedDeck","SavedDecksList","savedDecks","showSavedDeckById","created_at","deck","Loading","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modifyLoadingText","bind","assertThisInitialized","state","loadingText","amountOfDots","dotsIncreasing","loadingTextVisible","interval","setInterval","clearInterval","setState","Component","App","event","preventDefault","loading","cardService","showCard","hoverImageUrl","cardListColor","savedDeckToShow","asyncToGenerator","regenerator_default","mark","_callee","draftSet","draftBoosters","wrap","_context","prev","next","document","getElementById","concat","draftRound","stop","_x","apply","arguments","shuffleNewBoosters","_ref2","_callee2","_context2","_x2","touchsupport","cardIndex","boosterIndexIncrement","booster","filter","x","removedIndex","Math","floor","random","showDraftDeckWithoutEvent","deckService","deckCards","_ref3","_callee3","_context3","alert","setTimeout","foundDecks","_x3","target","window","navigator","maxTouchPoints","msMaxTouchPoints","setsArray","releaseDate","reduce","accumulator","_this2","components_NavBar","components_SavedDeck","components_SavedDecksList","components_Loading","components_DraftDeck","components_CardList","components_DraftCardList","components_Card","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.6f53f30a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://api.magicthegathering.io/v1'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(\r\n    baseUrl + '/cards?contains=imageUrl&pageSize=5&random=true'\r\n  )\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst getColor = color => {\r\n  const request = axios.get(\r\n    baseUrl + '/cards?contains=imageUrl&pageSize=5&random=true&colors=' + color\r\n  )\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst getById = id => {\r\n  const request = axios.get(baseUrl + '/cards/' + id)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst getDraftBooster = set => {\r\n  const request = axios.get(baseUrl + '/sets/' + set + '/booster')\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst getSets = () => {\r\n  // allegiance|guilds|2019|dominaria|rivals|ixalan|amonkhet|devastation|\r\n  const request = axios.get(baseUrl + '/sets?name=alpha|beta')\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getColor,\r\n  getById,\r\n  getDraftBooster,\r\n  getSets\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/decks'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getById = deckId => {\r\n  const request = axios.get(baseUrl + '/' + deckId)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newDeck, deckName) => {\r\n  const request = axios.post(baseUrl, newDeck, deckName)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, getById, create }\r\n","import React from 'react'\r\n\r\nconst Card = ({ card, backToCardList }) => {\r\n  return (\r\n    <div className=\"showCard\">\r\n      <div>\r\n        <button\r\n          onClick={backToCardList}\r\n          className=\"btn buttonDefaultPurpleText\"\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <img src={card.imageUrl} alt=\"card_image\" />\r\n\r\n      <div className=\"row showCardRow\">\r\n        <div className=\"col-sm-4 title-cell showCardLeftColumn\">Name:</div>\r\n        <div className=\"col-sm-8 data-cell showCardRightColumn\">\r\n          {card.name}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row showCardRow\">\r\n        <div className=\"col-sm-4 title-cell showCardLeftColumn\">Set:</div>\r\n        <div className=\"col-sm-8 data-cell showCardRightColumn\">\r\n          {card.setName}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row showCardRow\">\r\n        <div className=\"col-sm-4 title-cell showCardLeftColumn\">Rarity:</div>\r\n        <div className=\"col-sm-8 data-cell showCardRightColumn\">\r\n          {card.rarity}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row cardText\">\r\n        <div className=\"col-sm-12 title-cell\">{card.text}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nconst CardList = ({\r\n  cards,\r\n  showCardForMobile,\r\n  showImageOrCard,\r\n  mouseOver,\r\n  mouseOut,\r\n  color,\r\n  showLinkForId\r\n}) => {\r\n  return (\r\n    <div className=\"cardList\">\r\n      <ul className=\"cardListUl list-group\">\r\n        {cards.map(function(card, index) {\r\n          if (card.id === showLinkForId) {\r\n            return (\r\n              <li\r\n                key={index}\r\n                onClick={showImageOrCard(card.id, card.imageUrl)}\r\n                onMouseOver={mouseOver(card.imageUrl)}\r\n                onMouseOut={mouseOut}\r\n                className=\"cardListLi list-group-item\"\r\n                style={{ color: color }}\r\n              >\r\n                {card.name}\r\n                <br />\r\n                <button\r\n                  onClick={showCardForMobile(card.id)}\r\n                  className=\"btn showLinkForIdButton\"\r\n                >\r\n                  Show\r\n                </button>\r\n              </li>\r\n            )\r\n          } else {\r\n            return (\r\n              <li\r\n                key={index}\r\n                onClick={showImageOrCard(card.id, card.imageUrl)}\r\n                onMouseOver={mouseOver(card.imageUrl)}\r\n                onMouseOut={mouseOut}\r\n                className=\"cardListLi list-group-item\"\r\n                style={{ color: color }}\r\n              >\r\n                {card.name}\r\n              </li>\r\n            )\r\n          }\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nconst NavBar = ({\r\n  getCardsWithColor,\r\n  playDraft,\r\n  showDraftDeck,\r\n  sets,\r\n  draftDeck,\r\n  savedDecksAmount,\r\n  showSavedDecks\r\n}) => {\r\n  return (\r\n    <div className=\"navBarElements\">\r\n      <div className=\"upperBtnRow\">\r\n        <button\r\n          onClick={getCardsWithColor('white')}\r\n          className=\"btn btn-default buttonWhite\"\r\n        >\r\n          White\r\n        </button>\r\n        <button\r\n          onClick={getCardsWithColor('blue')}\r\n          className=\"btn btn-default buttonBlue\"\r\n        >\r\n          Blue\r\n        </button>\r\n        <button\r\n          onClick={getCardsWithColor('black')}\r\n          className=\"btn btn-default buttonBlack\"\r\n        >\r\n          Black\r\n        </button>\r\n      </div>\r\n      <div className=\"lowerBtnRow\">\r\n        <button\r\n          onClick={getCardsWithColor('red')}\r\n          className=\"btn btn-default buttonRed\"\r\n        >\r\n          Red\r\n        </button>\r\n        <button\r\n          onClick={getCardsWithColor('green')}\r\n          className=\"btn btn-default buttonGreen\"\r\n        >\r\n          Green\r\n        </button>\r\n      </div>\r\n      <div className=\"draftSelectList\">\r\n        <select id=\"draft-select\" className=\"form-control\" onChange={playDraft}>\r\n          <option defaultValue hidden>\r\n            Draft\r\n          </option>\r\n          {sets.map(function(set, index) {\r\n            return (\r\n              <option value={set.code} key={index}>\r\n                {set.name}\r\n              </option>\r\n            )\r\n          })}\r\n        </select>\r\n      </div>\r\n\r\n      <button onClick={showSavedDecks} className=\"btn buttonShowSavedDecks\">\r\n        Saved Decks ({savedDecksAmount})\r\n      </button>\r\n\r\n      {draftDeck.length > 0 ? (\r\n        <button onClick={showDraftDeck} className=\"btn buttonShowDraftedDeck\">\r\n          Drafted Deck ({draftDeck.length})\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nconst DraftCardList = ({\r\n  boosters,\r\n  addCardToDeck,\r\n  boosterIndex,\r\n  showDraftingInfo,\r\n  toggleDraftingInfo\r\n}) => {\r\n  return (\r\n    <div className=\"draftCardList\">\r\n      <div className=\"draftingInfo\">\r\n        <button\r\n          onClick={toggleDraftingInfo}\r\n          className=\"btn btn-default buttonDraftingInfo\"\r\n        >\r\n          Info\r\n        </button>\r\n\r\n        {showDraftingInfo ? (\r\n          <div className=\"draftingInfoText\">\r\n            <p>\r\n              You and 7 computer players each have 3 boosters, each containing\r\n              15 cards.\r\n            </p>\r\n            <p>\r\n              Everybody opens the first booster and picks one card (computers by\r\n              random).\r\n            </p>\r\n            <p>\r\n              After picking a card, you pass your booster with 14 cards and get\r\n              a 14 card booster from other player and so on...\r\n            </p>\r\n            <p>\r\n              When all 15 cards are picked, each player opens a new booster and\r\n              repeat the previous process.\r\n            </p>\r\n            <p>\r\n              After drafting all 3 boosters you should have a 45 card deck which\r\n              you can save to the database.\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      {boosters[boosterIndex].map(function(card, index) {\r\n        return (\r\n          <img\r\n            src={card.imageUrl}\r\n            alt=\"imageUrl\"\r\n            key={index}\r\n            className=\"draftCardImage cardImage\"\r\n            onClick={addCardToDeck(card, boosterIndex, index)}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DraftCardList\r\n","import React from 'react'\r\n\r\nconst DraftDeck = ({\r\n  draftDeck,\r\n  cardsLeft,\r\n  getBackToDrafting,\r\n  saveDeck,\r\n  deckIsSaved,\r\n  toggleShowSaveDeckForm,\r\n  showSavedDeckForm,\r\n  changeSavedDeckName,\r\n  savedDeckName,\r\n  showDeckHasBeenSavedText\r\n}) => {\r\n  draftDeck.sort(function(a, b) {\r\n    let colorsA = ''\r\n    if (a.colors) {\r\n      for (let i = 0; i < a.colors.length; i++) {\r\n        colorsA += a.colors[i]\r\n      }\r\n      colorsA += a.cmc\r\n    }\r\n    let colorsB = ''\r\n    if (b.colors) {\r\n      for (let i = 0; i < b.colors.length; i++) {\r\n        colorsB += b.colors[i]\r\n      }\r\n      colorsB += b.cmc\r\n    }\r\n    if (colorsA < colorsB) return -1\r\n    if (colorsA > colorsB) return 1\r\n    return 0\r\n  })\r\n\r\n  return (\r\n    <div className=\"draftDeck\">\r\n      <div className=\"savedDeckNameDiv\">\r\n        {showDeckHasBeenSavedText ? (\r\n          <p className=\"goldenParagraph\">\r\n            Deck {savedDeckName} has been saved!\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n\r\n      {cardsLeft ? (\r\n        <div>\r\n          <button\r\n            onClick={getBackToDrafting}\r\n            className=\"btn btn-default buttonDefaultPurpleText\"\r\n          >\r\n            Back to drafting\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"saveDeckDiv\">\r\n          {!deckIsSaved ? (\r\n            <button\r\n              onClick={toggleShowSaveDeckForm}\r\n              className=\"btn btn-default buttonDefaultPurpleText\"\r\n            >\r\n              Save Deck\r\n            </button>\r\n          ) : null}\r\n\r\n          {showSavedDeckForm ? (\r\n            <div className=\"saveDeckForm\">\r\n              <input\r\n                onChange={changeSavedDeckName}\r\n                placeholder=\"Deck Name\"\r\n                type=\"text\"\r\n                id=\"changeSavedDeckNameInput\"\r\n                autoFocus\r\n              ></input>\r\n              <button\r\n                onClick={saveDeck(draftDeck, savedDeckName)}\r\n                className=\"btn saveDeckButton\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n\r\n      {draftDeck.map(function(card, index) {\r\n        return (\r\n          <img\r\n            src={card.imageUrl}\r\n            alt=\"imageUrl\"\r\n            key={index}\r\n            className=\"draftDeckCardImage cardImage\"\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DraftDeck\r\n","import React from 'react'\r\n\r\nconst SavedDeck = ({ savedDeck }) => {\r\n  return (\r\n    <div className=\"draftDeck\">\r\n      <h1 className=\"savedDeckName\">{savedDeck.name}</h1>\r\n\r\n      {savedDeck.cards.map(function(card, index) {\r\n        return (\r\n          <img\r\n            src={card.imageUrl}\r\n            alt={card.name}\r\n            key={index}\r\n            className=\"savedDeckCardImage cardImage\"\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedDeck\r\n","import React from 'react'\r\n\r\nconst SavedDecksList = ({ savedDecks, showSavedDeckById }) => {\r\n  savedDecks.sort(function(a, b) {\r\n    if (a.created_at > b.created_at) return -1\r\n    if (a.created_at < b.created_at) return 1\r\n    return 0\r\n  })\r\n\r\n  return (\r\n    <div className=\"savedDecksList\">\r\n      <ul className=\"savedDecksListUl list-group\">\r\n        {savedDecks.map(function(deck) {\r\n          return (\r\n            <li\r\n              onClick={showSavedDeckById(deck.id)}\r\n              key={deck.id}\r\n              className=\"savedDecksListLi list-group-item\"\r\n            >\r\n              {deck.name}\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedDecksList\r\n","import React, { Component } from 'react'\r\n\r\nclass Loading extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.modifyLoadingText = this.modifyLoadingText.bind(this)\r\n\r\n    this.state = {\r\n      loadingText: 'Loading',\r\n      amountOfDots: 0,\r\n      dotsIncreasing: true,\r\n      loadingTextVisible: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.modifyLoadingText, 200)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  modifyLoadingText() {\r\n    let loadingText = 'Loading'\r\n\r\n    if (this.state.dotsIncreasing) {\r\n      this.setState({ amountOfDots: this.state.amountOfDots + 1 })\r\n    } else {\r\n      this.setState({ amountOfDots: this.state.amountOfDots - 1 })\r\n    }\r\n\r\n    if (this.state.dotsIncreasing && this.state.amountOfDots === 3) {\r\n      this.setState({ dotsIncreasing: false })\r\n    }\r\n\r\n    if (!this.state.dotsIncreasing && this.state.amountOfDots === 0) {\r\n      this.setState({ dotsIncreasing: true })\r\n    }\r\n\r\n    for (let i = 0; i < this.state.amountOfDots; i++) {\r\n      loadingText += '.'\r\n    }\r\n    this.setState({ loadingText })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loading\">\r\n        <div className=\"loadingContent\">\r\n          <p>{this.state.loadingText}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loading\r\n","import React, { Component } from 'react'\r\nimport cardService from './services/cards'\r\nimport deckService from './services/decks'\r\nimport Card from './components/Card'\r\nimport CardList from './components/CardList'\r\nimport NavBar from './components/NavBar'\r\nimport DraftCardList from './components/DraftCardList'\r\nimport DraftDeck from './components/DraftDeck'\r\nimport SavedDeck from './components/SavedDeck'\r\nimport SavedDecksList from './components/SavedDecksList'\r\nimport Loading from './components/Loading'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // Bind functions\r\n    this.getCardsWithColor = this.getCardsWithColor.bind(this)\r\n    this.playDraft = this.playDraft.bind(this)\r\n    this.showImageOrCard = this.showImageOrCard.bind(this)\r\n    this.showCard = this.showCard.bind(this)\r\n    this.showCardForMobile = this.showCardForMobile.bind(this)\r\n    this.mouseOver = this.mouseOver.bind(this)\r\n    this.mouseOut = this.mouseOut.bind(this)\r\n    this.addCardToDeck = this.addCardToDeck.bind(this)\r\n    this.shuffleNewBoosters = this.shuffleNewBoosters.bind(this)\r\n    this.showDraftDeck = this.showDraftDeck.bind(this)\r\n    this.showDraftDeckWithoutEvent = this.showDraftDeckWithoutEvent.bind(this)\r\n    this.toggleDraftingInfo = this.toggleDraftingInfo.bind(this)\r\n    this.getBackToDrafting = this.getBackToDrafting.bind(this)\r\n    this.showSavedDecks = this.showSavedDecks.bind(this)\r\n    this.showSavedDeckById = this.showSavedDeckById.bind(this)\r\n    this.saveDeck = this.saveDeck.bind(this)\r\n    this.toggleShowSaveDeckForm = this.toggleShowSaveDeckForm.bind(this)\r\n    this.changeSavedDeckName = this.changeSavedDeckName.bind(this)\r\n    this.backToCardList = this.backToCardList.bind(this)\r\n\r\n    // Check if using mobile with touch\r\n    const touchsupport =\r\n      'ontouchstart' in window ||\r\n      navigator.maxTouchPoints > 0 ||\r\n      navigator.msMaxTouchPoints > 0\r\n    this.state = {\r\n      cards: [],\r\n      boosters: [],\r\n      draftDeck: [],\r\n      savedDecks: [],\r\n      sets: [],\r\n      mouseOver: false,\r\n      showDraftDeck: false,\r\n      showSavedDecks: false,\r\n      loading: false,\r\n      showDraftingInfo: false,\r\n      showCard: null,\r\n      showSavedDeckForm: false,\r\n      showDeckHasBeenSavedText: false,\r\n      savedDeckToShow: null,\r\n      savedDeckName: null,\r\n      deckIsSaved: false,\r\n      cardsLeft: false,\r\n      draftSet: '',\r\n      hoverImageUrl: '',\r\n      cardListColor: '',\r\n      showLinkForId: '',\r\n      boosterIndex: 0,\r\n      draftRound: 0,\r\n      savedDecksAmount: 0,\r\n      touchsupport: touchsupport\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true })\r\n\r\n    await cardService.getSets().then(response => {\r\n      const sets = response.sets.sort(function(a, b) {\r\n        if (a.releaseDate > b.releaseDate) return -1\r\n        if (a.releaseDate < b.releaseDate) return 1\r\n        return 0\r\n      })\r\n      let setsArray = sets.reduce(function(accumulator, set) {\r\n        return set.booster ? accumulator.concat(set) : accumulator\r\n      }, [])\r\n      setsArray.sort((a, b) => a.releaseDate < b.releaseDate)\r\n      this.setState({\r\n        sets: setsArray\r\n      })\r\n    })\r\n\r\n    await deckService.getAll().then(savedDecks => {\r\n      this.setState({\r\n        savedDecks: savedDecks,\r\n        savedDecksAmount: savedDecks.length,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  // Get 5 random cards with chosen color\r\n  getCardsWithColor = color => event => {\r\n    event.preventDefault()\r\n    this.setState({ loading: true })\r\n\r\n    cardService.getColor(color).then(response => {\r\n      // Add cards to array in state and clear possible hovering settings\r\n      this.setState({\r\n        cards: response.cards,\r\n        showCard: null,\r\n        mouseOver: false,\r\n        showDraftDeck: false,\r\n        showSavedDecks: false,\r\n        showSavedDeckForm: false,\r\n        hoverImageUrl: '',\r\n        cardListColor: color,\r\n        showLinkForId: '',\r\n        savedDeckToShow: null,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  // Get 8 boosters with 15 draft cards each for given set\r\n  playDraft = async event => {\r\n    event.preventDefault()\r\n\r\n    const draftSet = document.getElementById('draft-select').value\r\n\r\n    // Show loading text while getting the boosters from API\r\n    this.setState({\r\n      loading: true,\r\n      deckIsSaved: false,\r\n      boosters: [],\r\n      draftSet: draftSet\r\n    })\r\n\r\n    // Change value back to default\r\n    document.getElementById('draft-select').value = 'Draft'\r\n\r\n    let draftBoosters = []\r\n    // Get 8 boosters\r\n    for (let i = 0; i < 8; i++) {\r\n      await cardService.getDraftBooster(draftSet).then(response => {\r\n        draftBoosters = draftBoosters.concat([response.cards])\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      // Add draft cards to array in state and clear possible other settings\r\n      cards: [],\r\n      draftDeck: [],\r\n      showCard: null,\r\n      mouseOver: false,\r\n      showDraftDeck: false,\r\n      showSavedDecks: false,\r\n      showSavedDeckForm: false,\r\n      showDraftingInfo: false,\r\n      cardsLeft: true,\r\n      hoverImageUrl: '',\r\n      cardListColor: '',\r\n      showLinkForId: '',\r\n      boosterIndex: 0,\r\n      draftRound: 1,\r\n      savedDeckToShow: null,\r\n      boosters: draftBoosters,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  shuffleNewBoosters = async draftRound => {\r\n    // Show loading text while getting the boosters from API\r\n    this.setState({\r\n      boosters: [],\r\n      showDraftingInfo: false,\r\n      cardsLeft: true\r\n    })\r\n\r\n    let draftBoosters = []\r\n    // Get 8 boosters\r\n    for (let i = 0; i < 8; i++) {\r\n      await cardService.getDraftBooster(this.state.draftSet).then(response => {\r\n        draftBoosters = draftBoosters.concat([response.cards])\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      // Add draft cards to array in state and clear possible other settings\r\n      cards: [],\r\n      showCard: null,\r\n      mouseOver: false,\r\n      hoverImageUrl: '',\r\n      cardListColor: '',\r\n      showLinkForId: '',\r\n      boosterIndex: 0,\r\n      draftRound: draftRound,\r\n      loading: false,\r\n      boosters: draftBoosters\r\n    })\r\n  }\r\n\r\n  // Hovering is not possible if using mobile, so when clicked with mobile, display image and button for show view\r\n  showImageOrCard = (id, imageUrl) => event => {\r\n    event.preventDefault()\r\n\r\n    // If not using mobile and clicked on a card name, show the card\r\n    if (!this.state.touchsupport) {\r\n      this.showCard(id)\r\n    } else {\r\n      // For mobile, if this card is already clicked, show the card\r\n      if (this.state.hoverImageUrl === imageUrl) {\r\n        this.setState({\r\n          mouseOver: false,\r\n          showDraftDeck: false,\r\n          showCard: null,\r\n          showLinkForId: ''\r\n        })\r\n        // If first click, show the hover image\r\n      } else {\r\n        this.setState({\r\n          mouseOver: true,\r\n          showDraftDeck: false,\r\n          showSavedDecks: false,\r\n          hoverImageUrl: imageUrl,\r\n          showCard: null,\r\n          showLinkForId: id\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // Two almost duplicate methods because other one needs event.preventDefault() and this won't work with it\r\n  showCard = id => {\r\n    // Getting image takes a while, so show Loading... and hide it when image is retreived\r\n    this.setState({\r\n      loading: true,\r\n      hoverImageUrl: '',\r\n      mouseOver: false,\r\n      showDraftDeck: false,\r\n      showSavedDecks: false,\r\n      showLinkForId: ''\r\n    })\r\n\r\n    cardService.getById(id).then(response => {\r\n      this.setState({\r\n        showCard: response.card,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  // Without preventing default event (clicked from button) this activates straight away when clicked on a card name\r\n  showCardForMobile = id => event => {\r\n    event.preventDefault()\r\n    // Getting image takes a while, so show Loading... and hide it when image is retreived\r\n    this.setState({\r\n      loading: true,\r\n      mouseOver: false,\r\n      showDraftDeck: false,\r\n      showSavedDecks: false,\r\n      hoverImageUrl: '',\r\n      showLinkForId: ''\r\n    })\r\n\r\n    cardService.getById(id).then(response => {\r\n      this.setState({\r\n        showCard: response.card,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  // On desktop show card image when hovering the name\r\n  mouseOver = imageUrl => event => {\r\n    event.preventDefault()\r\n\r\n    if (!this.state.touchsupport) {\r\n      this.setState({\r\n        mouseOver: true,\r\n        hoverImageUrl: imageUrl\r\n      })\r\n    }\r\n  }\r\n\r\n  // Hide the card image when not hovering the name\r\n  mouseOut = event => {\r\n    event.preventDefault()\r\n\r\n    if (!this.state.touchsupport) {\r\n      this.setState({\r\n        mouseOver: false,\r\n        hoverImageUrl: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  addCardToDeck = (card, boosterIndex, cardIndex) => event => {\r\n    event.preventDefault()\r\n\r\n    let boosterIndexIncrement = this.state.boosterIndex\r\n    if (boosterIndexIncrement === 7) {\r\n      boosterIndexIncrement = 0\r\n    } else {\r\n      boosterIndexIncrement += 1\r\n    }\r\n\r\n    // Remove chosen card from booster. Using index over ID because there might be duplicate cards in boosters\r\n    const boosters = this.state.boosters\r\n\r\n    // Remove one random card from every booster\r\n    boosters.map(function(booster, index) {\r\n      if (boosterIndex === index) {\r\n        booster = booster.filter((x, i) => i !== cardIndex)\r\n        return (boosters[index] = booster)\r\n      } else {\r\n        const removedIndex = Math.floor(\r\n          Math.random() * Math.floor(booster.length)\r\n        )\r\n        booster = booster.filter((x, i) => i !== removedIndex)\r\n        return (boosters[index] = booster)\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      draftDeck: this.state.draftDeck.concat(card),\r\n      boosters: boosters,\r\n      boosterIndex: boosterIndexIncrement,\r\n      showDraftingInfo: false\r\n    })\r\n\r\n    if (this.state.boosters[0].length === 0 && this.state.draftRound < 3) {\r\n      this.setState({\r\n        boosterIndex: 0,\r\n        cardsLeft: false,\r\n        loading: true\r\n      })\r\n      this.shuffleNewBoosters(this.state.draftRound + 1)\r\n    } else if (\r\n      this.state.boosters[0].length === 0 &&\r\n      this.state.draftRound === 3\r\n    ) {\r\n      this.showDraftDeckWithoutEvent()\r\n    }\r\n  }\r\n\r\n  // Button to show drafted cards\r\n  showDraftDeck = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      cards: [],\r\n      showCard: null,\r\n      mouseOver: false,\r\n      showDraftDeck: true,\r\n      showSavedDeckForm: false,\r\n      hoverImageUrl: '',\r\n      showLinkForId: '',\r\n      cardListColor: '',\r\n      showSavedDecks: false,\r\n      savedDeckToShow: null\r\n    })\r\n  }\r\n\r\n  // Cannot call upper function from this file, needs event to work\r\n  showDraftDeckWithoutEvent = () => {\r\n    this.setState({\r\n      cards: [],\r\n      showCard: null,\r\n      mouseOver: false,\r\n      showDraftDeck: true,\r\n      showSavedDeckForm: false,\r\n      hoverImageUrl: '',\r\n      showLinkForId: '',\r\n      cardListColor: '',\r\n      showSavedDecks: false,\r\n      cardsLeft: false,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  // Button to get back to drafting from viewing your so far drafted deck\r\n  getBackToDrafting = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      showDraftDeck: false,\r\n      showSavedDeckForm: false\r\n    })\r\n  }\r\n\r\n  toggleDraftingInfo = event => {\r\n    event.preventDefault()\r\n\r\n    this.state.showDraftingInfo\r\n      ? this.setState({ showDraftingInfo: false })\r\n      : this.setState({ showDraftingInfo: true })\r\n  }\r\n\r\n  // Show drafted decks that were saved to database\r\n  showSavedDecks = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      showSavedDecks: true,\r\n      cards: [],\r\n      mouseOver: false,\r\n      showDraftDeck: false,\r\n      showSavedDeckForm: false,\r\n      loading: false,\r\n      showDraftingInfo: false,\r\n      showCard: null,\r\n      hoverImageUrl: '',\r\n      cardListColor: '',\r\n      showLinkForId: '',\r\n      savedDeckToShow: null\r\n    })\r\n  }\r\n\r\n  // Show selected saved deck\r\n  showSavedDeckById = deckId => event => {\r\n    event.preventDefault()\r\n\r\n    deckService.getById(deckId).then(savedDeckToShow => {\r\n      this.setState({\r\n        showSavedDecks: false,\r\n        showSavedDeckForm: false,\r\n        savedDeckToShow: savedDeckToShow\r\n      })\r\n    })\r\n  }\r\n\r\n  // Save complete deck to database\r\n  saveDeck = (deckCards, deckName) => async event => {\r\n    event.preventDefault()\r\n\r\n    if (!deckName) {\r\n      alert('Name your deck!')\r\n    } else {\r\n      this.setState({ loading: true })\r\n\r\n      const newDeck = { name: deckName, cards: deckCards }\r\n\r\n      await deckService.create(newDeck).then(deck => {\r\n        this.setState({\r\n          deckIsSaved: true,\r\n          savedDeckName: deck.name,\r\n          showSavedDeckForm: false,\r\n          showDeckHasBeenSavedText: true,\r\n          loading: false\r\n        })\r\n      })\r\n      setTimeout(() => {\r\n        this.setState({\r\n          savedDeckName: null,\r\n          showDeckHasBeenSavedText: false\r\n        })\r\n      }, 5000)\r\n\r\n      // Get the saved decks from database\r\n      // If there are more than 10 saved decks, backend automatically deletes the oldest ones\r\n      await deckService.getAll().then(foundDecks => {\r\n        this.setState({\r\n          savedDecks: foundDecks,\r\n          savedDecksAmount: foundDecks.length\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleShowSaveDeckForm = event => {\r\n    event.preventDefault()\r\n\r\n    if (this.state.showSavedDeckForm === false) {\r\n      this.setState({\r\n        showSavedDeckForm: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        showSavedDeckForm: false\r\n      })\r\n    }\r\n  }\r\n\r\n  changeSavedDeckName = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      savedDeckName: event.target.value\r\n    })\r\n  }\r\n\r\n  backToCardList = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      showCard: null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          getCardsWithColor={this.getCardsWithColor}\r\n          playDraft={this.playDraft}\r\n          sets={this.state.sets}\r\n          draftDeck={this.state.draftDeck}\r\n          showDraftDeck={this.showDraftDeck}\r\n          savedDecksAmount={this.state.savedDecks.length}\r\n          showSavedDecks={this.showSavedDecks}\r\n        />\r\n\r\n        {this.state.savedDeckToShow !== null ? (\r\n          <SavedDeck savedDeck={this.state.savedDeckToShow} />\r\n        ) : null}\r\n\r\n        {this.state.showSavedDecks ? (\r\n          <SavedDecksList\r\n            savedDecks={this.state.savedDecks}\r\n            showSavedDeckById={this.showSavedDeckById}\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.loading ? <Loading /> : null}\r\n\r\n        {this.state.showDraftDeck ? (\r\n          <DraftDeck\r\n            draftDeck={this.state.draftDeck}\r\n            cardsLeft={this.state.cardsLeft}\r\n            getBackToDrafting={this.getBackToDrafting}\r\n            saveDeck={this.saveDeck}\r\n            deckIsSaved={this.state.deckIsSaved}\r\n            toggleShowSaveDeckForm={this.toggleShowSaveDeckForm}\r\n            showSavedDeckForm={this.state.showSavedDeckForm}\r\n            changeSavedDeckName={this.changeSavedDeckName}\r\n            savedDeckName={this.state.savedDeckName}\r\n            showDeckHasBeenSavedText={this.state.showDeckHasBeenSavedText}\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.cards.length > 0 &&\r\n        !this.state.showCard &&\r\n        !this.state.loading ? (\r\n          <CardList\r\n            cards={this.state.cards}\r\n            showCardForMobile={this.showCardForMobile}\r\n            showImageOrCard={this.showImageOrCard}\r\n            mouseOver={this.mouseOver}\r\n            mouseOut={this.mouseOut}\r\n            color={this.state.cardListColor}\r\n            showLinkForId={this.state.showLinkForId}\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.boosters.length > 0 &&\r\n        !this.state.showDraftDeck &&\r\n        !this.state.showSavedDecks &&\r\n        !this.state.savedDeckToShow &&\r\n        this.state.cards.length === 0 &&\r\n        !this.state.showCard ? (\r\n          <DraftCardList\r\n            boosters={this.state.boosters}\r\n            addCardToDeck={this.addCardToDeck}\r\n            boosterIndex={this.state.boosterIndex}\r\n            showDraftingInfo={this.state.showDraftingInfo}\r\n            toggleDraftingInfo={this.toggleDraftingInfo}\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.showCard !== null ? (\r\n          <Card\r\n            card={this.state.showCard}\r\n            backToCardList={this.backToCardList}\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.mouseOver ? (\r\n          <div className=\"hoverImage\">\r\n            <img\r\n              src={this.state.hoverImageUrl}\r\n              alt=\"imageUrl\"\r\n              className=\"cardImage\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './styles.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}